@page "/equiposinfo/{id}"
@using NBA_FINAL_PROJECT.Model
@using System.Net.Http
@using System.Text.Json.Serialization
@inject HttpClient http
@inject NavigationManager navigation

<div>
    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="arrow_back" Size="ButtonSize.Medium" Click=volver />
</div>

@if(equipo != null)
{
    <RadzenCard class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
        <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
            <RadzenImage Path="@getEqImg(equipo.abbreviation)" Style="width: 100px; height: 100px; border-radius: 50%;" />
            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Equipo</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@equipo.full_name</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Ciudad</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@equipo.city</b></RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    @if (jugadoresEquipo != null)
    {
        <RadzenDataGrid Data="@jugadoresEquipo" TItem="JugadorUnicoEquipo" 
                AllowFiltering="true"
                AllowSorting="true"
                AllowPaging="true"
                PageSize="10">
            <Columns>
                <RadzenDataGridColumn TItem="JugadorUnicoEquipo" Property="dorsal" TextAlign="TextAlign.Center" Title="Dorsal" Width="120px" />
                <RadzenDataGridColumn TItem="JugadorUnicoEquipo" Property="id" Sortable="false" Filterable="false" Width="270px" TextAlign="TextAlign.Center" Title="Foto">
                    <Template Context="JugadorUnicoEquipo">
                        <RadzenImage Path="@getUrlImg(JugadorUnicoEquipo.id)" class="imgRedondaJugEq" />
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="JugadorUnicoEquipo" Property="full_name" TextAlign="TextAlign.Center" Title="Nombre Completo" />
            </Columns>
        </RadzenDataGrid>
    }
}

@code {
    [Parameter]
    public String Id { get; set;}
    Equipo equipo;
    Equipos_API2 equipos;
    Jugador_API2 jugadores;
    List<JugadorUnicoEquipo> jugadoresEquipo = new List<JugadorUnicoEquipo>();
    string idEquipo_API2;

    protected override async Task OnInitializedAsync()
    {
        equipo = await http.GetFromJsonAsync<Equipo>($"https://www.balldontlie.io/api/v1/teams/{Id}");

        equipos = await http.GetFromJsonAsync<Equipos_API2>("https://data.nba.net/data/10s/prod/v1/2022/teams.json");

        jugadores = await http.GetFromJsonAsync<Jugador_API2>("https://data.nba.net/data/10s/prod/v1/2022/players.json");

        idEquipo();
    }

    private void idEquipo()
    {
        for (int i = 0; i < equipos.league.standard.Length; i++)
        {
            if (equipos.league.standard[i].tricode.Equals(equipo.abbreviation))
            {
                idEquipo_API2 = equipos.league.standard[i].teamId;
            }
        }

        getJugadores();
    }

    private void getJugadores()
    {
        for (int i = 0; i < jugadores.league.standard.Length; i ++)
        {
            if (jugadores.league.standard[i].teamId == idEquipo_API2)
            {
                JugadorUnicoEquipo jugadorUnicoEquipo = new JugadorUnicoEquipo();

                jugadorUnicoEquipo.id = jugadores.league.standard[i].personId;

                @if (jugadores.league.standard[i].firstName != null && jugadores.league.standard[i].lastName != null)
                {
                    jugadorUnicoEquipo.full_name = jugadores.league.standard[i].firstName + " " + jugadores.league.standard[i].lastName;
                }
                else if (jugadores.league.standard[i].firstName == null)
                {
                    jugadorUnicoEquipo.full_name = jugadores.league.standard[i].lastName;
                }
                else if (jugadores.league.standard[i].lastName == null)
                {
                    jugadorUnicoEquipo.full_name = jugadores.league.standard[i].firstName;
                }
                else
                {
                    jugadorUnicoEquipo.full_name = "";
                }
                if (jugadores.league.standard[i].jersey.Equals(""))
                {
                    jugadorUnicoEquipo.dorsal = -1;
                }
                else
                {
                    jugadorUnicoEquipo.dorsal = Int32.Parse(jugadores.league.standard[i].jersey);
                }
                jugadoresEquipo.Add(jugadorUnicoEquipo);
            }
        }
    }

    private void volver(){
        navigation.NavigateTo("/equipos");
    }

    private string getUrlImg(string id)
    {
        return "https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/" + id + ".png";
    }

    private string getEqImg(string abbreviation)
    {
        return "/img/equipos/" + abbreviation + ".png";
    }

}
