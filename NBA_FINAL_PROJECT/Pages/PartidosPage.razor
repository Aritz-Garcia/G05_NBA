@page "/partidos"

<PageTitle>Weather forecast</PageTitle>

@using NBA_FINAL_PROJECT.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <RadzenDataGrid Data="@forecasts" TItem="WeatherForecast"
                AllowFiltering="true"
                AllowSorting="true"
                AllowPaging="true"
                PageSize="5">
        <Columns>
            <RadzenDataGridColumn TItem="WeatherForecast" Property="Date" Title="Date">
                <Template Context="data">@data.Date.ToShortDateString()</Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureC" Title="Temp. (C)" />
            <RadzenDataGridColumn TItem="WeatherForecast" Property="TemperatureF" Title="Temp. (F)" />
            <RadzenDataGridColumn TItem="WeatherForecast" Property="Summary" Title="Summary" />
        </Columns>
    </RadzenDataGrid>




    <RadzenChart>
        <RadzenLineSeries Smooth="true" Data="@forecasts" CategoryProperty="Date" Title="Temp. (C)"
                      LineType="LineType.Solid" ValueProperty="TemperatureC">
            <RadzenMarkers MarkerType="MarkerType.Circle" />
        </RadzenLineSeries>
        <RadzenLineSeries Smooth="true" Data="@forecasts" CategoryProperty="Date" Title="Temp. (F)"
                      LineType="LineType.Solid" ValueProperty="TemperatureF">
            <RadzenMarkers MarkerType="MarkerType.Circle" />
        </RadzenLineSeries>

        <RadzenCategoryAxis FormatString="{0:dd}">
        </RadzenCategoryAxis>
        <RadzenValueAxis>
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Temperature" />
        </RadzenValueAxis>
    </RadzenChart>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
